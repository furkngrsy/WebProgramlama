// <auto-generated />
using System;
using DataAccessLayer.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20211215093630_mig_yorumtakviye")]
    partial class mig_yorumtakviye
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entity.Concrete.Hakkinda", b =>
                {
                    b.Property<int>("HakkindaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HakkindaDetay1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HakkindaDetay2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HakkindaFoto1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HakkindaFoto2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HakkindaID");

                    b.ToTable("Hakkindas");
                });

            modelBuilder.Entity("Entity.Concrete.Iletisim", b =>
                {
                    b.Property<int>("IletisimID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IletisimDurum")
                        .HasColumnType("bit");

                    b.Property<string>("IletisimKonu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IletisimKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IletisimMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IletisimMesaj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IletisimTarih")
                        .HasColumnType("datetime2");

                    b.HasKey("IletisimID");

                    b.ToTable("Iletisims");
                });

            modelBuilder.Entity("Entity.Concrete.Kategori", b =>
                {
                    b.Property<int>("KategoriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KategoriAciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KategoriAd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("KategoriDurum")
                        .HasColumnType("bit");

                    b.HasKey("KategoriID");

                    b.ToTable("Kategoris");
                });

            modelBuilder.Entity("Entity.Concrete.Kullanici", b =>
                {
                    b.Property<int>("KullaniciID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KullaniciAd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("KullaniciDurum")
                        .HasColumnType("bit");

                    b.Property<string>("KullaniciMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciSifre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KullaniciID");

                    b.ToTable("Kullanicis");
                });

            modelBuilder.Entity("Entity.Concrete.Takviyeler", b =>
                {
                    b.Property<int>("TakviyeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KategoriID")
                        .HasColumnType("int");

                    b.Property<string>("Marka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TakviyeAd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TakviyeAdet")
                        .HasColumnType("int");

                    b.Property<string>("TakviyeAroma")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TakviyeDurum")
                        .HasColumnType("bit");

                    b.Property<int>("TakviyeFiyat")
                        .HasColumnType("int");

                    b.Property<string>("TakviyeFoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TakviyeKucukFoto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TakviyeID");

                    b.HasIndex("KategoriID");

                    b.ToTable("Takviyelers");
                });

            modelBuilder.Entity("Entity.Concrete.Yorumlar", b =>
                {
                    b.Property<int>("YorumID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TakviyeID")
                        .HasColumnType("int");

                    b.Property<int?>("TakviyelerTakviyeID")
                        .HasColumnType("int");

                    b.Property<bool>("YorumDurum")
                        .HasColumnType("bit");

                    b.Property<string>("YorumIcerik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YorumKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("YorumTarih")
                        .HasColumnType("datetime2");

                    b.HasKey("YorumID");

                    b.HasIndex("TakviyelerTakviyeID");

                    b.ToTable("Yorumlars");
                });

            modelBuilder.Entity("Entity.Concrete.Takviyeler", b =>
                {
                    b.HasOne("Entity.Concrete.Kategori", "Kategori")
                        .WithMany("Takviyelers")
                        .HasForeignKey("KategoriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("Entity.Concrete.Yorumlar", b =>
                {
                    b.HasOne("Entity.Concrete.Takviyeler", "Takviyeler")
                        .WithMany("Yorumlars")
                        .HasForeignKey("TakviyelerTakviyeID");

                    b.Navigation("Takviyeler");
                });

            modelBuilder.Entity("Entity.Concrete.Kategori", b =>
                {
                    b.Navigation("Takviyelers");
                });

            modelBuilder.Entity("Entity.Concrete.Takviyeler", b =>
                {
                    b.Navigation("Yorumlars");
                });
#pragma warning restore 612, 618
        }
    }
}
